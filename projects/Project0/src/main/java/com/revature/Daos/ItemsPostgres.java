package com.revature.daos;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
//import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import org.postgresql.util.PSQLException;

import com.revature.models.Items;
//import com.revature.services.CustomerService;
import com.revature.util.ConnectionUtil;

public class ItemsPostgres implements ItemsDao {

	@Override
	public Items createItem(Items i) {
		String sql = "insert into items (item_name, item_description, item_status) values (?,?,?) returning item_id;";
		try (Connection c = ConnectionUtil.getConnectionFromEnv()) {
			PreparedStatement ps = c.prepareStatement(sql);
			ps.setString(1, i.getName());
			ps.setString(2, i.getDescription());
			ps.setString(3, i.getStatus());

			ResultSet rs = ps.executeQuery(); // return the id generated by the database
			if (rs.next()) {
				i.setId(rs.getInt("item_id"));
			}

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		return i;
	}

	@Override
	public Items retrieveItemByID(int item_id) {
		String sql = "select * from items where item_id = ?;";
		Items item = null;

		try (Connection c = ConnectionUtil.getConnectionFromEnv()) {
			PreparedStatement ps = c.prepareStatement(sql);

			ps.setInt(1, item_id); // this refers to the 1st ? in the sql String

			ResultSet rs = ps.executeQuery();

			if (rs.next()) {
				item = new Items();
				item.setId(rs.getInt("item_id"));
				item.setName(rs.getString("item_name"));
				item.setDescription(rs.getString("item_description"));
				item.setStatus(rs.getString("item_status"));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return item;
	}

	@Override
	public List<Items> retrieveItems() {
		String sql = "select * from items;";
		List<Items> items = new ArrayList<>();

		try (Connection c = ConnectionUtil.getConnectionFromEnv()) {
			Statement s = c.createStatement();
			ResultSet rs = s.executeQuery(sql);

			while (rs.next()) {
				Items i = new Items();
				i.setId(rs.getInt("item_id"));
				i.setName(rs.getString("item_name"));
				i.setDescription(rs.getString("item_description"));
				i.setStatus(rs.getString("item_state"));

				items.add(i);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return items;
	}

//	@Override
//	public Item retrieveItemByItem_Name(String item_name) {
//		String sql = "select * from items where user_name  = ?;";
//		User u = null;
//		
//		try (Connection c = ConnectionUtil.getConnectionFromEnv();){
//			PreparedStatement ps = c.prepareStatement(sql);
//			
//			ps.setString(1, username); // this refers to the 1st "?" in the sql string, allows to inject data
//
//			ResultSet rs = ps.executeQuery();
//			
//			while(rs.next()) {
//				u = new User();
//				u.setId(rs.getInt("user_id"));
//				u.setFirstName(rs.getString("first_name"));
//				u.setLastName(rs.getString("last_name"));
//				u.setUsername(rs.getString("user_name"));
//				u.setPassword(rs.getString("pass_word"));
//			}
//			
//		} catch (SQLException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//		
//		return u;
//	}

	@Override
	public boolean updateItem(Item u) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean deleteItemById(int id) {
		// TODO Auto-generated method stub
		return false;
	}

//	@Override
//	public Item createItem(Item i) {
//		// TODO Auto-generated method stub
//		return null;
//	}
//
//	@Override
//	public List<Item> retrieveItemById(int item_id) {
//		String sql = "select i.item_id, i.item_name, i.item_description";
//		List<Item> ItemsMenu = new ArrayList<>();
//		
//		try(Connection c = ConnectionUtil.getConnectionFromFile()){
//			PreparedStatement ps = c.prepareStatement(sql);
//			ps.setInt(1, item_id);
//			
//			ResultSet rs = ps.executeQuery();
//			
//			while(rs.next()) {
//				Item i = new Item();
//				i.setId(rs.getInt("item_id"));
//				i.setName(rs.getString("item_name"));
//				i.setDescription(rs.getString("item_description"));
//				
//				ItemsMenu.add(i);
//			}
//		} catch (Exception e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//		return ItemsMenu;
//	}
//
//	@Override
//	public boolean updateShopItem(Item i) {
//		// TODO Auto-generated method stub
//		return false;
//	}
}
